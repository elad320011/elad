pipeline {
    agent { label 'jenkins-host' }

    environment {
        // Define environment variables for the pipeline
        DOCKER_REGISTRY = "elad320011"
        IMAGE_NAME = "elad-website"
        NAMESPACE = "elad-dev"
        DEPLOYMENT_NAME = "elad-website"
        CONTAINER_NAME = "elad-website"
        IMAGE_PATH="${DOCKER_REGISTRY}/${IMAGE_NAME}:dev-${new Date().format("yyyyMMddHHmmss")}"
    }

    stages {
        stage('Checkout') {
            // Checkout the repository from GitHub
            steps {
                git branch: 'elad-dev',
                    credentialsId: 'elad-git-token',
                    url: 'https://github.com/elad320011/elad.git'
            }
        }

        stage('Build and Push Docker Image') {
            // Build and push the Docker image to Docker Hub
            steps {
                script {
                    def CUSTOMIMAGE = docker.build("${IMAGE_PATH}")
                    docker.withRegistry("https://registry.hub.docker.com", "elad-dockerhub") {
                        CUSTOMIMAGE.push()
                    }
                }
            }
        }  

        stage('Deploy to Kubernetes') {
            // Deploy the Docker image to a Kubernetes cluster
            steps {
                script {
                    def CUSTOMIMAGE = docker.build("${IMAGE_PATH}")
                    sh "kubectl set image deployment/${DEPLOYMENT_NAME} ${CONTAINER_NAME}=${CUSTOMIMAGE} -n ${NAMESPACE}"
                }
            }
        }
    
        stage('Testing') {
            // Run tests on the deployed application
            steps {
                sh 'python3 -m pip install -r requirements.txt'
                sh 'python3 Tests/test_app.py'
            }
        }
    }

    post {
        always {
            // Clean workspace after the pipeline completes
            cleanWs()
        }
    }
}
